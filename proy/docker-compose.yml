version: '3.8'

services:
  # Base de datos para microclientes
  postgres-clientes:
    image: postgres:15-alpine
    container_name: postgres-clientes
    environment:
      POSTGRES_DB: microclientesdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    volumes:
      - postgres_clientes_data:/var/lib/postgresql/data
      - ./microclientes/microclientes/src/main/resources/BaseDatos.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base de datos para microcuentas
  postgres-cuentas:
    image: postgres:15-alpine
    container_name: postgres-cuentas
    environment:
      POSTGRES_DB: microcuentasdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5433:5432"
    volumes:
      - postgres_cuentas_data:/var/lib/postgresql/data
      - ./microcuentas/microcuentas/src/main/resources/data.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Eureka Server
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8761
      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=false
      - EUREKA_CLIENT_FETCH-REGISTRY=false
    depends_on:
      postgres-clientes:
        condition: service_healthy
      postgres-cuentas:
        condition: service_healthy
    networks:
      - microservices-network
    restart: unless-stopped

  # Microservicio de Clientes
  microclientes:
    build:
      context: ./microclientes/microclientes
      dockerfile: Dockerfile
    container_name: microclientes
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-clientes:5432/microclientesdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      eureka-server:
        condition: service_started
      postgres-clientes:
        condition: service_healthy
    networks:
      - microservices-network
    restart: unless-stopped

  # Microservicio de Cuentas
  microcuentas:
    build:
      context: ./microcuentas/microcuentas
      dockerfile: Dockerfile
    container_name: microcuentas
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8081
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-cuentas:5432/microcuentasdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - MICROCLIENTES_SERVICE_URL=http://microclientes:8080
    depends_on:
      eureka-server:
        condition: service_started
      microclientes:
        condition: service_started
      postgres-cuentas:
        condition: service_healthy
    networks:
      - microservices-network
    restart: unless-stopped

  # API Gateway
  gateway:
    build:
      context: ./gateway/gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8083
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_started
      microclientes:
        condition: service_started
      microcuentas:
        condition: service_started
    networks:
      - microservices-network
    restart: unless-stopped

volumes:
  postgres_clientes_data:
    driver: local
  postgres_cuentas_data:
    driver: local

networks:
  microservices-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 